package runeList

import (
	"regexp"
	"strings"
)

func getRune(r string) string {
	var runeList = map[string]rune{
		"0x100078": 0x100078,
		"0x100079": 0x100079,
		"0x10007A": 0x10007A,
		"0x10007B": 0x10007B,
		"0x10007C": 0x10007C,
		"0x10007D": 0x10007D,
		"0x10007E": 0x10007E,
		"0x10008C": 0x10008C,
		"0x10008D": 0x10008D,
		"0x10008E": 0x10008E,
		"0x10008F": 0x10008F,
		"0x100090": 0x100090,
		"0x100091": 0x100091,
		"0x100092": 0x100092,
		"0x100093": 0x100093,
		"0x100094": 0x100094,
		"0x100095": 0x100095,
		"0x10007F": 0x10007F,
		"0x100080": 0x100080,
		"0x100081": 0x100081,
		"0x100082": 0x100082,
		"0x100083": 0x100083,
		"0x100096": 0x100096,
		"0x100097": 0x100097,
		"0x100098": 0x100098,
		"0x100099": 0x100099,
		"0x10009A": 0x10009A,
		"0x10009B": 0x10009B,
		"0x10009C": 0x10009C,
		"0x10009D": 0x10009D,
		"0x10009E": 0x10009E,
		"0x100084": 0x100084,
		"0x100085": 0x100085,
		"0x100086": 0x100086,
		"0x100087": 0x100087,
		"0x100088": 0x100088,
		"0x100089": 0x100089,
		"0x10008A": 0x10008A,
		"0x10008B": 0x10008B,
		"0x10009F": 0x10009F,
		"0x100001": 0x100001,
		"0x100002": 0x100002,
		"0x100003": 0x100003,
		"0x100004": 0x100004,
		"0x100005": 0x100005,
		"0x100006": 0x100006,
		"0x100007": 0x100007,
		"0x100008": 0x100008,
		"0x100009": 0x100009,
		"0x10000A": 0x10000A,
		"0x10000B": 0x10000B,
		"0x10000C": 0x10000C,
		"0x10000D": 0x10000D,
		"0x10000E": 0x10000E,
		"0x10000F": 0x10000F,
		"0x100010": 0x100010,
		"0x100011": 0x100011,
		"0x100012": 0x100012,
		"0x100013": 0x100013,
		"0x100014": 0x100014,
		"0x100015": 0x100015,
		"0x100016": 0x100016,
		"0x100017": 0x100017,
		"0x100018": 0x100018,
		"0x100019": 0x100019,
		"0x10001A": 0x10001A,
		"0x10001B": 0x10001B,
		"0x10001C": 0x10001C,
		"0x10001D": 0x10001D,
		"0x10001E": 0x10001E,
		"0x10001F": 0x10001F,
		"0x100020": 0x100020,
		"0x100021": 0x100021,
		"0x100022": 0x100022,
		"0x100023": 0x100023,
		"0x10005D": 0x10005D,
		"0x10005F": 0x10005F,
		"0x10005E": 0x10005E,
		"0x1000A0": 0x1000A0,
		"0x1000A1": 0x1000A1,
		"0x100024": 0x100024,
		"0x1000A2": 0x1000A2,
		"0x1000A3": 0x1000A3,
		"0x1000A4": 0x1000A4,
		"0x1000A5": 0x1000A5,
		"0x1000A6": 0x1000A6,
		"0x1000A7": 0x1000A7,
		"0x100026": 0x100026,
		"0x100027": 0x100027,
		"0x100029": 0x100029,
		"0x10002A": 0x10002A,
		"0x10002B": 0x10002B,
		"0x10002C": 0x10002C,
		"0x10002D": 0x10002D,
		"0x10002E": 0x10002E,
		"0x10002F": 0x10002F,
		"0x10003A": 0x10003A,
		"0x1000A8": 0x1000A8,
		"0x1000A9": 0x1000A9,
		"0x1000AA": 0x1000AA,
		"0x1000AB": 0x1000AB,
		"0x1000AC": 0x1000AC,
		"0x100033": 0x100033,
		"0x1000AD": 0x1000AD,
		"0x100030": 0x100030,
		"0x100031": 0x100031,
		"0x100032": 0x100032,
		"0x1000AE": 0x1000AE,
		"0x100035": 0x100035,
		"0x100036": 0x100036,
		"0x100039": 0x100039,
		"0x100037": 0x100037,
		"0x100038": 0x100038,
		"0x1000AF": 0x1000AF,
		"0x1000B0": 0x1000B0,
		"0x1000B1": 0x1000B1,
		"0x1000B2": 0x1000B2,
		"0x1000B3": 0x1000B3,
		"0x10003B": 0x10003B,
		"0x10003C": 0x10003C,
		"0x10003D": 0x10003D,
		"0x1000B4": 0x1000B4,
		"0x100040": 0x100040,
		"0x100041": 0x100041,
		"0x100042": 0x100042,
		"0x100043": 0x100043,
		"0x100044": 0x100044,
		"0x100045": 0x100045,
		"0x1000B5": 0x1000B5,
		"0x100047": 0x100047,
		"0x100049": 0x100049,
		"0x10004A": 0x10004A,
		"0x10004B": 0x10004B,
		"0x10004C": 0x10004C,
		"0x10004D": 0x10004D,
		"0x10004E": 0x10004E,
		"0x10004F": 0x10004F,
		"0x100050": 0x100050,
		"0x100051": 0x100051,
		"0x100053": 0x100053,
		"0x100054": 0x100054,
		"0x100055": 0x100055,
		"0x100056": 0x100056,
		"0x1000B6": 0x1000B6,
		"0x100057": 0x100057,
		"0x100058": 0x100058,
		"0x100059": 0x100059,
		"0x1000B7": 0x1000B7,
		"0x10005B": 0x10005B,
		"0x10005C": 0x10005C,
		"0x100060": 0x100060,
		"0x100061": 0x100061,
		"0x100062": 0x100062,
		"0x1000B8": 0x1000B8,
		"0x1000B9": 0x1000B9,
		"0x100064": 0x100064,
		"0x100065": 0x100065,
		"0x100066": 0x100066,
		"0x100067": 0x100067,
		"0x100068": 0x100068,
		"0x100069": 0x100069,
		"0x10006A": 0x10006A,
		"0x10006B": 0x10006B,
		"0x10006C": 0x10006C,
		"0x10006D": 0x10006D,
		"0x10006E": 0x10006E,
		"0x10006F": 0x10006F,
		"0x100070": 0x100070,
		"0x100071": 0x100071,
		"0x100072": 0x100072,
		"0x100073": 0x100073,
		"0x100074": 0x100074,
		"0x100075": 0x100075,
		"0x100076": 0x100076,
		"0x100077": 0x100077,
	}
	return string(runeList[r])
}

// CheckRune : Validate rune in sting and replace string
func CheckRune(c string) string {

	var re = regexp.MustCompile(`0x[0-9A-Z]{6}`)

	for {
		matches := re.FindStringSubmatch(c)
		if len(matches) > 0 {
			c = strings.Replace(c, matches[0], getRune(matches[0]), -1)
		} else {
			return c
		}
	}
}
